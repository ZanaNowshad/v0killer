// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  userId    String   @unique
  imageUrl  String
  createdAt DateTime @default(now())
  UI        UI[]
}

model UI {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique
  prompt    String
  img       String
  createdAt DateTime @default(now())
  likes     Int      @default(0)
  views     Int      @default(0)
  subPrompt SubPrompt[]
  like      Like[]
  user      User     @relation(fields: [userId], references: [userId])
}

model SubPrompt {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  UIId      String   @db.ObjectId
  SUBId     String   @unique
  subPrompt String
  code      Code[]
  UI        UI       @relation(fields: [UIId], references: [id], onDelete: Cascade)
}

model Code{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  promptId String @db.ObjectId
  code String
  prompt SubPrompt @relation(fields: [promptId], references: [id], onDelete: Cascade)
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  UIId      String   @db.ObjectId
  createdAt DateTime @default(now())
  ui      UI     @relation(fields: [UIId], references: [id])
}